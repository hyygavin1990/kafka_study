server:
  port: 8080
spring:
  kafka:
    bootstrap-servers: 192.168.3.200:9092,192.168.3.200:9093,192.168.3.200:9094
    producer: # 生产者
      retries: 3 # 发送失败重试次数
      batch-size: 16384
      buffer-memory: 33554432
      acks: 1
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: default-group
      enable-auto-commit: false # 自动提交关闭
      auto-offset-reset: earliest # 新消费组从头开始消费
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 500
      auto-commit-interval: 1000
    listener:
      # RECORD 当每一条记录被消费者监听器（ListenerConsumer） 处理之后提交
      # BATCH 当每一批poll()的数据被消费者监听器（ListenerConsumer） 处理之后提交
      # TIME 当每一批poll()的数据被消费者监听器（ListenerConsumer）处理之后，距离上次提交时间大于TIME时提交
      # COUNT 当每一批poll()的数据被消费者监听器（ListenerConsumer）处理之后，被处理record数量大于等于COUNT时提交
      # COUNT_TIME, TIME | COUNT 有一个条件满足时提交
      # MANUAL, 当每一批poll()的数据被消费者监听器（ListenerConsumer）处理之后，手动调用Acknowledge.acknowledge()后提交
      # MANUAL_IMMEDIATE 手动调用Acknowledge.acknowledge()后提交，一般使用这种
      ack-mode: MANUAL_IMMEDIATE